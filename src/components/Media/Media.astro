---
import { Debug } from 'astro:components';
import { ImageMetadata } from 'astro';
import { getImage } from 'astro:assets';
import MediaCaption from './MediaCaption.astro';
import MediaContainer from './MediaContainer.astro';
import MediaInt from './MediaInt';

interface Media {
  src: string | ImageMetadata;
  alt?: string;
  caption?: string;
}

interface Props {
  src?: string | ImageMetadata;
  alt?: string;
  caption?: string;
  int?: boolean;
  arr?: Media[];
  aspectRatio?: string;
}

const {
  src,
  alt,
  caption,
  int = true,
  arr,
  aspectRatio,
} = Astro.props as Props;

let singleMedia;
let isVideo = false;

if (src) {
  if ((typeof src) == "string") {
    if (src.toLowerCase().endsWith(".mp4")) {
      isVideo = true;
    }
  }
  if (!int) {
    singleMedia = await getImage({
      src: src,
      format: "webp"
    })
  } else {
    singleMedia = {
      src: src
    };
  }
}

const isCarousel = (arr != undefined);
---

{(!int && singleMedia) &&
  <div 
    class:list={[
      "media",
      {"captioned": (caption)}
    ]}
  >
    <MediaContainer
      src={singleMedia.src}
      height={singleMedia.attributes.height}
      width={singleMedia.attributes.width}
      alt={alt}
    />
    {(caption) &&
      <MediaCaption
        caption={caption}
      />
    }
  </div>
}
{(int && singleMedia) &&
  <MediaInt
    client:only="solid-js"
    src={singleMedia.src}
    alt={alt}
    caption={caption}
    isVideo={isVideo}
  />
}
{(int && isCarousel) &&
  <MediaInt 
    client:only="solid-js"
    arr={arr}
    aspectRatio={aspectRatio}
  />
}