---
// [tag].astro /////////////////////////////////////////////////////////////////
// Dynamically creates routes @ /blog/tags/`tag` for every blog post tag.

import Layout from "../../../layouts/Layout.astro";
import BlogPostCard from "../../../components/BlogPostCard.astro";
import Pagination from "../../../components/Pagination.astro";

export async function getStaticPaths() {
  const blogPosts = await Astro.glob("../../../blog/*.mdx");
  const uniqueTags = [...new Set(blogPosts.map((blogPost) => blogPost.frontmatter.tags).flat())];
  return uniqueTags.map((tag) => {
    const tagSpecificPosts = blogPosts.filter((blogPost) => blogPost.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { blogPosts: tagSpecificPosts },
    };
  })
}
const { tag } = Astro.params;
const { blogPosts } = Astro.props;


const title = `Joel Elizaga | Blog | ${tag}`;
---

<Layout
  title={title}
  currentPage={"blog"}
>
  <main>
    <h1>
      <i class="fa-solid fa-atlas"></i> Blog / 
      <a href="/blog" class="current-tag">{tag}<i class="fa-solid fa-x"></i></a>
    </h1>
    <ul class="blog">
      {blogPosts.map(blogPost => (
        <BlogPostCard
          slug={`/blog/${blogPost.frontmatter.slug}`}
          title={blogPost.frontmatter.title}
          description={blogPost.frontmatter.description}
          img={blogPost.frontmatter.img}
          pubDate={blogPost.frontmatter.pubDate}
          tags={blogPost.frontmatter.tags}
        />
      ))}
    </ul>
  </main>
</Layout>

<style>
  .blog {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    list-style: none;
    margin: 0;
    padding: 0;
  }

  main {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  h1 {
    font-size: clamp(42px, 3.3333vw, 3.3333vw);
    line-height: clamp(66px, 5.20833vw, 5.20833vw);
  }

  .current-tag {
    align-items: center;
    color: var(--lawetlatla_ash_dim);
    display: inline-flex;
    gap: 1rem;
    justify-content: center;
  }

  .current-tag i {
    align-items: center;
    background-image: var(--noonoo_protrusion_rounded_bright);
    border: none;
    border-radius: 100%;
    box-shadow: var(--noonoo_protrusion_bright);
    color: var(--lawetlatla_ash_dim);
    display: flex;
    height: 1em;
    font-size: 0.5em;
    padding: 0.4rem;
    justify-content: center;
    transition: box-shadow ease-in 0.1s, color ease-in 0.1s;
    width: 1em;
  }

  .current-tag:hover i {
    color: var(--spectacular_red_bright);
  }

  .current-tag:active i {
    box-shadow: var(--noonoo_protrusion_bright), var(--noonoo_depression_bright);
  }

  @media screen and (max-width: 1120px) {

    h1 {
      font-size: clamp(33px, 2.604166vw, 2.604166vw);
      line-height: clamp(53px, 4.16666vw, 4.16666vw);;
    }

  }

  @media screen and (max-width: 890px) {

    h1 {
      font-size: clamp(26px, 2.03125vw, 2.03125vw);
      line-height: clamp(42px, 3.3333vw, 3.3333vw);
    }
    
  }
</style>